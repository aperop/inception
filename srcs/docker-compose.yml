version: "3.9"

services:
## MySQL database ##
  mariadb:
    container_name: mariadb
    image: mariadb:${TITLE}
    build:
      context: requirements/mariadb/
      args:
      - DB_CLIENT=${DB_CLIENT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_USER2=${MYSQL_USER2}
      - DB_PASSWORD=${DB_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - network
    volumes:
      - database:/var/lib/mysql
    restart: always
    
## Website ##
  wordpress:
    container_name: wordpress
    image: wordpress:${TITLE}
    build:
      context: requirements/wordpress/
      args:
        - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
        - WORDPRESS_DB_USER=${MYSQL_USER}
        - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
        - WORDPRESS_DB_HOST=${DB_HOST}
        - DOMAIN_NAME=${DOMAIN_NAME}
    networks:
      - network
    restart: always
    depends_on:
      - mariadb
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - TITLE=${TITLE}
      - WP_ADMIN_USER=${WP_ADMIN_USER}
      - WP_ADMIN_PASSWORD=${WP_ADMIN_PASSWORD}
      - WP_ADMIN_MAIL=${WP_ADMIN_MAIL}
      - WP_USER=${WP_USER}
      - WP_PASSWORD=${WP_PASSWORD}
    volumes:
      - website:/var/www/html

## Server ##
  nginx:
    container_name: nginx
    image: nginx:${TITLE}
    build: requirements/nginx/
    ports:
      - "443:443"
    volumes:
      - website:/var/www/html
    depends_on:
      - wordpress
    networks:
      - network
    restart: always

## Redis ##
  redis:
    container_name: redis
    image: redis:${TITLE}
    build: requirements/redis/
    depends_on:
      - wordpress
    networks:
      - network
    restart: always

## Static website ##
  static-website:
    container_name: static-website
    image: static-website:${TITLE}
    build: requirements/static-website/
    ports:
      - 1234:80
    restart: always

## Adminer ##
  adminer:
    container_name: adminer
    image: adminer:${TITLE}
    build: requirements/adminer/
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
    depends_on:
      - mariadb
    ports:
      - 8080:8080
    restart: always
    networks:
      - network

## FTP ##
  ftp:
    container_name: ftp
    image: ftp:${TITLE}
    depends_on:
      - wordpress
    build:
      context: requirements/ftp/
      args:
      - FTP_USER=${WP_ADMIN_USER}
    restart: always
    ports:
      - "20:20"
      - "21:21"
      - "21100-21110:21100-21110"
    networks:
      - network
    volumes:
      - website:/home/${WP_ADMIN_USER}/
    environment:
      - FTP_USER=${FTP_ADMIN_USER}
      - FTP_PASS=${FTP_ADMIN_PASSWORD}
      - PASV_ADDRESS=0.0.0.0
      - PASV_MIN=21100
      - PASV_MAX=21110

## Back-up tool ##
  duplicator:
    container_name: duplicator
    build: requirements/duplicator/
    image: duplicator:${TITLE}
    networks:
      - network
    depends_on:
      - mariadb
    volumes:
      - database:/db-data
      - backup:/backup
    restart: always

############### NETWORKS ##################

networks:
  network:


############### VOLUMES ##################

volumes:
  website:
    driver_opts:
      type: none
      device: /home/dhawkgir/data/website
      o: bind
  database:
    driver_opts:
      type: none
      device: /home/dhawkgir/data/database
      o: bind
  backup:
    driver_opts:
      type: none
      device: /home/dhawkgir/data/backup
      o: bind
